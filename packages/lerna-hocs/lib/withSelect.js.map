{"version":3,"sources":["../src/withSelect.js"],"names":["IdentityRenderer","value","Component","Select","props","handleChange","option","disabled","disableBy","onChange","nullable","undefined","propTypes","options","PropTypes","array","isRequired","any","func","keyBy","bool","defaultProps","noop","identity"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEO,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAf;AAAA,CAAzB;AAEP;;;;;;;;eAIe,kBAACC,SAAD,EAAe;AAC5B,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACxB,QAAMC,YAAY,GAAG,wBAAY,UAACC,MAAD,EAAY;AAC3C,UAAIF,KAAK,CAACG,QAAN,IAAkBH,KAAK,CAACI,SAAN,CAAgBF,MAAhB,CAAtB,EAA+C;AAC7C;AACD,OAH0C,CAK3C;;;AACA,UAAIA,MAAM,KAAKF,KAAK,CAACH,KAArB,EAA4B;AAC1BG,QAAAA,KAAK,CAACK,QAAN,CAAeH,MAAf;AACD,OAFD,MAEO,IAAIF,KAAK,CAACM,QAAV,EAAoB;AACzBN,QAAAA,KAAK,CAACK,QAAN,CAAeE,SAAf;AACD;AACF,KAXoB,CAArB;AAaA,WAAO,gCAAC,SAAD,eAAeP,KAAf;AAAsB,MAAA,QAAQ,EAAEC;AAAhC,OAAP;AACD,GAfD;;AAiBAF,EAAAA,MAAM,CAACS,SAAP,GAAmB;AACjB;AACAC,IAAAA,OAAO,EAAEC,sBAAUC,KAAV,CAAgBC,UAFR;AAGjBf,IAAAA,KAAK,EAAEa,sBAAUG,GAHA;AAGK;AACtBR,IAAAA,QAAQ,EAAEK,sBAAUI,IAJH;;AAKjB;AACA;AACAC,IAAAA,KAAK,EAAEL,sBAAUI,IAPA;AAQjBV,IAAAA,SAAS,EAAEM,sBAAUI,IARJ;;AASjB;AACAX,IAAAA,QAAQ,EAAEO,sBAAUM,IAVH;AAWjBV,IAAAA,QAAQ,EAAEI,sBAAUM;AAXH,GAAnB;AAcAjB,EAAAA,MAAM,CAACkB,YAAP,GAAsB;AACpBpB,IAAAA,KAAK,EAAEU,SADa;AAEpBF,IAAAA,QAAQ,EAAEa,gBAFU;AAGpB;AACAH,IAAAA,KAAK,EAAEI,oBAJa;AAKpBf,IAAAA,SAAS,EAAE,0BAAS,KAAT,CALS;AAMpBD,IAAAA,QAAQ,EAAE,KANU;AAOpBG,IAAAA,QAAQ,EAAE;AAPU,GAAtB;AAUA,SAAOP,MAAP;AACD,C","sourcesContent":["import React, { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport constant from 'lodash/constant';\r\nimport noop from 'lodash/noop';\r\nimport identity from 'lodash/identity';\r\n\r\nexport const IdentityRenderer = ({ value }) => value;\r\n\r\n/**\r\n * Provides standard Select functionality, since dropdowns/tiles/choiceboxes\r\n * all have the same Select behavior.\r\n */\r\nexport default (Component) => {\r\n  const Select = (props) => {\r\n    const handleChange = useCallback((option) => {\r\n      if (props.disabled || props.disableBy(option)) {\r\n        return;\r\n      }\r\n\r\n      // only trigger if value changes\r\n      if (option !== props.value) {\r\n        props.onChange(option);\r\n      } else if (props.nullable) {\r\n        props.onChange(undefined);\r\n      }\r\n    });\r\n\r\n    return <Component {...props} onChange={handleChange} />;\r\n  };\r\n\r\n  Select.propTypes = {\r\n    /** select options (not configurator options) */\r\n    options: PropTypes.array.isRequired,\r\n    value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\r\n    onChange: PropTypes.func,\r\n    /** option-level */\r\n    // optionRenderer: PropTypes.func,\r\n    keyBy: PropTypes.func,\r\n    disableBy: PropTypes.func,\r\n    /** component-level */\r\n    disabled: PropTypes.bool,\r\n    nullable: PropTypes.bool,\r\n  };\r\n\r\n  Select.defaultProps = {\r\n    value: undefined,\r\n    onChange: noop,\r\n    // optionRenderer: IdentityRenderer,\r\n    keyBy: identity,\r\n    disableBy: constant(false),\r\n    disabled: false,\r\n    nullable: false,\r\n  };\r\n\r\n  return Select;\r\n};\r\n"],"file":"withSelect.js"}